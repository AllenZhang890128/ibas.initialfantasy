<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE DataStructureOrchestration>
<ns2:DataStructureOrchestration
    xmlns:ns2="http://colorcoding.org/btulz/transformers">
    <Name>sql_mysql_ibas_initialization</Name>
    <Description>基于MYSQL的结构映射说明</Description>
    <Integrated>true</Integrated>
    <DriverName>com.mysql.jdbc.Driver</DriverName>
    <DbUrl>jdbc:mysql://${DbServer}:${DbPort}/mysql?useUnicode=true&amp;characterEncoding=utf8</DbUrl>
    <DbUser>${DbUser}</DbUser>
    <DbPassword>${DbPassword}</DbPassword>
    <Action Name="create db" Isolated="true">
        <Step Name="check and create db">
            <Script>
                create database if not exists `${DbName}` character set utf8
            </Script>
        </Step>
    </Action>
    <Action Name="create stored procedures ${Company}_SP_TRANSACTION_NOTIFICATION">
        <Step Name="check and drop exists stored procedures">
            <Script>
                DROP PROCEDURE IF EXISTS `${DbName}`.`${Company}_SP_TRANSACTION_NOTIFICATION`;
            </Script>
        </Step>
        <Step Name="create stored procedures">
            <Script>
                CREATE PROCEDURE `${DbName}`.`${Company}_SP_TRANSACTION_NOTIFICATION` (
                    _object_type varchar(20),                  --对象类型（BOCode）
                    _transaction_type char(1),                 --业务类型（Add:A-添加, Update:U-更新, Delete:D-删除）
                    _num_of_cols_in_key int,                   --主键个数
                    _list_of_key_cols_tab_del varchar(255),    --主键名称
                    _list_of_cols_val_tab_del varchar(255)     --主键值
                )
                BEGIN
                    declare _error int;                             --返回值(0 无错误)
                    declare _error_message varchar(200);            --返回的消息
                    set _error = 0;
                    set _error_message = N'OK';
                    /*----------------------------------------------------------------------------------------------------------------------------*/
                    -- ADD YOUR CODE HERE
                    /* ----------------------------------------------------------------------------------------------------------------------------*/
                    -- return
                    select _error, _error_message;
                END
            </Script>
        </Step>
    </Action>
    <Action Name="create stored procedures ${Company}_SYS_SP_GET_USER_MODULES">
        <Step Name="check stored procedures exists">
            <Script>
                DROP PROCEDURE IF EXISTS `${DbName}`.`${Company}_SYS_SP_GET_USER_MODULES`;
            </Script>
        </Step>
        <Step Name="create stored procedures">
            <Script>
                CREATE PROCEDURE `${DbName}`.${Company}_SYS_SP_GET_USER_MODULES
                (
                    in Platform nvarchar(36),           /*平台全码*/
                    in userCode nvarchar(8)             /*用户编码*/
                )
                begin

                IF EXISTS (SELECT 0 FROM `${Company}_SYS_USER` WHERE `UserCode` = userCode AND `Super` = 'Y')  THEN
                    /* 超级用户全部权限 */
                    SELECT A.*,'A' AuthValue
                    FROM `${Company}_SYS_MODULE` A
                    WHERE A.`PlatformID` = Platform AND A.`Activated` = 'Y';
                ELSE
                    /* 非超级用户，角色权限 */
                    SELECT A.*,C.AuthValue
                    FROM `${Company}_SYS_MODULE` A INNER JOIN (
                        SELECT DISTINCT B.ModuleID,B.AuthValue
                        FROM `${Company}_SYS_PRIVILEGE` B
                        WHERE B.`PlatformID` = @platform AND B.`AuthValue` &lt;&gt; 'N' AND B.RoleCode IN (
                            SELECT B.`Role` 
                            FROM `${Company}_SYS_ORGSTRC` A INNER JOIN `${Company}_SYS_ORGROLE` B ON A.`ObjectKey` = B.`ObjectKey`
                                  INNER JOIN `${Company}_SYS_ROLEMEM` C ON B.`ObjectKey` = C.`ObjectKey` AND B.`LineId` = C.`RoleId`
                            WHERE A.`ValidDate` &lt;= GETDATE() AND A.`InvalidDate` &gt;= GETDATE() AND C.`Member` = @userCode)
                    ) C ON A.`ModuleId` = C.`ModuleID`
                    WHERE A.`PlatformID` = @platform AND A.Activated = 'Y';
                END IF;
                end;
            </Script>
        </Step>
    </Action>
    <Action Name="create stored procedures ${Company}_SYS_SP_GET_USER_PRIVILEGES">
        <Step Name="check stored procedures exists">
            <Script>
              DROP PROCEDURE IF EXISTS `${DbName}`.`${Company}_SYS_SP_GET_USER_PRIVILEGES`;
            </Script>
        </Step>
        <Step Name="create stored procedures">
            <Script>
              CREATE PROCEDURE `${DbName}`.`${Company}_SYS_SP_GET_USER_PRIVILEGES`
              (
              in _UserCode nvarchar(20)/*用户组编码*/
              )
              BEGIN

              END;
            </Script>
        </Step>
    </Action>
</ns2:DataStructureOrchestration>
